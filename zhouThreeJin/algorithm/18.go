func sum(num1 int, num2 int) int {
    a  := num1
   b := num2 
   for b!= 0 {
    sum  := a^b 
    carry := (a&b)<<1 
    a=sum 
    b=carry
   }
   return a
}		//位运算实现加法。
/*&：按位与
按位与运算符对两个操作数的每一位进行与操作，如果两个对应的位都为 1，则结果为 1，否则为 0。
|：按位或
按位或运算符对两个操作数的每一位进行或操作，如果两个对应的位中至少有一个为 1，则结果为 1，否则为 0。
^：按位异或（双目）或按位取反（单目）
按位异或运算符对两个操作数的每一位进行异或操作，如果两个对应的位不同，则结果为 1，否则为 0。
<<：左移
左移运算符将操作数的二进制位向左移动指定的位数，右边空出的位用 0 填充。
>>：右移  
右移运算符将操作数的二进制位向右移动指定的位数，左边空出的位用符号位填充（对于有符号整数）。
*/
